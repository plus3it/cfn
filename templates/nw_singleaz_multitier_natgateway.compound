{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "This template creates a VPC infrastructure for a single-AZ, dual-tier application. Outbound access for private subnets is enabled via NAT gateway.",
    "Parameters" :
    {
        "CIDRVPC" :
        {
            "Description" : "CIDR Block for the VPC (Example: 10.0.0.0/16, etc...)",
            "Type" : "String",
            "Default" : "10.1.0.0/16",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "CIDRPrivateSubnet1" :
        {
            "Description" : "CIDR Block for a Private Subnet (Example: 10.0.0.0/19, 10.0.64.0/19, etc...)",
            "Type" : "String",
            "Default" : "10.1.0.0/19",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "CIDRPublicSubnet1" :
        {
            "Description" : "CIDR Block for a Public DMZ Subnet (Example: 10.0.32.0/20, 10.0.96.0/20, etc...)",
            "Type" : "String",
            "Default" : "10.1.32.0/20",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "VpcPeerId" :
        {
            "Description" : "If creating a VPC peering connection, specify the VPC ID of the peer. Leave blank if not creating a VPC peering connection.",
            "Type" : "String",
            "Default" : "",
            "AllowedPattern" : "^$|^vpc-[0-9a-z]{8}$"
        },
        "VpcPeerCidr" :
        {
            "Description" : "CIDR block for the VPC Peer (Example: 10.0.0.0/16, etc...). Used to create routes to the VPC peer. Ignored if \"VpcPeerId\" is blank.",
            "Type" : "String",
            "Default" : "10.0.0.0/16",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "VpcPeerDomainDnsName" :
        {
            "Description" : "DNS name of the peered zone (Example: ad.example.com). Creates a Route53 Private Hosted Zone. Leave blank to skip this step.",
            "Type" : "String",
            "Default" : "ad.example.com",
            "AllowedPattern" : "^$|[a-zA-Z0-9]+\\..+"
        },
        "VpcPeerDc1Name" :
        {
            "Description" : "NetBIOS computer name of the first Domain Controller (Example: dc001, dc002, etc...). Ignored if \"VpcPeerDomainDnsName\" is blank.",
            "Type" : "String",
            "Default" : "dc001",
            "MinLength" : "1",
            "MaxLength" : "15",
            "AllowedPattern" : "[a-zA-Z0-9_-]+"
        },
        "VpcPeerDc1Ip" :
        {
            "Description" : "Private IP for the first Domain Controller instance (Example: 10.0.0.10, 10.0.64.10, etc...). Ignored if \"VpcPeerDomainDnsName\" is blank.",
            "Type" : "String",
            "Default" : "10.0.0.10",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
        },
        "VpcPeerDc2Name" :
        {
            "Description" : "NetBIOS computer name of the second Domain Controller (Example: dc001, dc002, etc...). Ignored if \"VpcPeerDomainDnsName\" is blank.",
            "Type" : "String",
            "Default" : "dc002",
            "MinLength" : "1",
            "MaxLength" : "15",
            "AllowedPattern" : "[a-zA-Z0-9_-]+"
        },
        "VpcPeerDc2Ip" :
        {
            "Description" : "Private IP for the second Domain Controller instance (e.g. 10.0.0.10, 10.0.64.10, etc...). Ignored if \"VpcPeerDomainDnsName\" is blank.",
            "Type" : "String",
            "Default" : "10.0.64.10",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
        }
    },
    "Conditions" :
    {
        "PeerVpc" :
        {
            "Fn::Not" : [ { "Fn::Equals" : [ { "Ref" : "VpcPeerId" }, "" ] } ]
        },
        "CreatePeeredZone" :
        {
            "Fn::Not" :
            [
                { "Fn::Equals" : [ { "Ref" : "VpcPeerDomainDnsName" }, "" ] }
            ]
        }
    },
    "Resources" :
    {
        "VPCStack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_vpc_with_igw.element",
                "Parameters" :
                {
                    "CIDRVPC" : { "Ref" : "CIDRVPC" }
           	    }
            }
        },
        "PublicSubnet1Stack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : "VPCStack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_public_subnet.element",
                "Parameters" :
                {
                    "AvailabilityZoneName" :
                    {
                        "Fn::Select" :
                        [
                            0,
                            { "Fn::GetAZs" : "" }
                        ]
                    },
                    "CIDRPublicSubnet" : { "Ref" : "CIDRPublicSubnet1" },
                    "PublicRouteTableId" :
                    {
                        "Fn::GetAtt" :
                        [
                            "VPCStack",
                            "Outputs.PublicRouteTableId"
                        ]
                    },
                    "VPC" : { "Fn::GetAtt" : [ "VPCStack", "Outputs.VPC" ] }
           	    }
            }
      	},
        "NATGatewayStack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : "PublicSubnet1Stack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_nat_gateway.element",
                "Parameters" :
                {
                    "PublicSubnetId" :
                    {
                        "Fn::GetAtt" :
                        [
                            "PublicSubnet1Stack",
                            "Outputs.PublicSubnetId"
                        ]
                    },
                    "VPC" : { "Fn::GetAtt" : [ "VPCStack", "Outputs.VPC" ] }
           	    }
            }
      	},
        "PrivateSubnet1Stack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : "NATGatewayStack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_private_subnet.element",
                "Parameters" :
                {
                    "AvailabilityZoneName" :
                    {
                        "Fn::Select" :
                        [
                            0,
                            { "Fn::GetAZs" : "" }
                        ]
                    },
                    "CIDRPrivateSubnet" : { "Ref" : "CIDRPrivateSubnet1" },
                    "PrivateRouteTableId" :
                    {
                        "Fn::GetAtt" :
                        [
                            "NATGatewayStack",
                            "Outputs.PrivateRouteTableId"
                        ]
                    },
                    "VPC" : { "Fn::GetAtt" : [ "VPCStack", "Outputs.VPC" ] }
           	    }
            }
        },
        "VpcPeeringConnectionStack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "Condition" : "PeerVpc",
            "DependsOn" : "NATGatewayStack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_vpc_peering_connection.element",
                "Parameters" :
                {
                    "RouteTableId1" :
                    {
                        "Fn::GetAtt" :
                        [
                            "VPCStack",
                            "Outputs.PublicRouteTableId"
                        ]
                    },
                    "RouteTableId2" :
                    {
                        "Fn::GetAtt" :
                        [
                            "NATGatewayStack",
                            "Outputs.PrivateRouteTableId"
                        ]
                    },
                    "VPC" : { "Fn::GetAtt" : [ "VPCStack", "Outputs.VPC" ] },
                    "VpcPeerId" : { "Ref" : "VpcPeerId" },
                    "VpcPeerCidr" : { "Ref" : "VpcPeerCidr" }
                }
            }
        },
        "VpcPeeredZoneStack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "Condition" : "CreatePeeredZone",
            "DependsOn" : "VPCStack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_r53_peered_domain.element",
                "Parameters" :
                {
                    "PeeredDomainDnsName" : { "Ref" : "VpcPeerDomainDnsName" },
                    "PeeredDc1Name" : { "Ref" : "VpcPeerDc1Name" },
                    "PeeredDc1Ip" : { "Ref" : "VpcPeerDc1Ip" },
                    "PeeredDc2Name" : { "Ref" : "VpcPeerDc2Name" },
                    "PeeredDc2Ip" : { "Ref" : "VpcPeerDc2Ip" },
                    "VPC" : { "Fn::GetAtt" : [ "VPCStack", "Outputs.VPC" ] }
                }
            }
        }
    },
    "Outputs" :
    {
         "VPC" :
         {
            "Value" : { "Fn::GetAtt" : [ "VPCStack", "Outputs.VPC" ] },
            "Description" : "VPC ID"
        },
        "InternetGatewayId" :
        {
            "Value" :
            {
                "Fn::GetAtt": [ "VPCStack", "Outputs.InternetGatewayId" ]
            },
            "Description" : "ID of the Internet Gateway"
        },
        "PublicRouteTableId" :
        {
            "Value" :
            {
                "Fn::GetAtt" : [ "VPCStack", "Outputs.PublicRouteTableId" ]
            },
            "Description" : "Route Table ID for Public Subnet"
        },
        "PublicSubnet1Id" :
        {
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "PublicSubnet1Stack",
                    "Outputs.PublicSubnetId"
                ]
            },
            "Description" : "Subnet ID for Public Subnet 1"
        },
        "PrivateSubnet1Id" :
        {
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "PrivateSubnet1Stack",
                    "Outputs.PrivateSubnetId"
                ]
            },
            "Description" : "Subnet ID for Private Subnet 1"
        },
        "PrivateRouteTable1Id" :
        {
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "NATGatewayStack",
                    "Outputs.PrivateRouteTableId"
                ]
            },
            "Description" : "ID of the Private Route Table for NAT Gateway"
        },
        "NATGatewayElasticIP" :
        {
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "NATGatewayStack",
                    "Outputs.NATGatewayElasticIP"
                ]
            },
            "Description" : "Elastic IP for NAT Gateway"
        },
        "VpcPeeringConnection" :
        {
            "Condition" : "PeerVpc",
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "VPCStack",
                    "Outputs.VpcPeeringConnection"
                ]
            },
            "Description" : "ID of the VPC peering connection"
        },
        "VpcPeerPrivateHostedZoneId" :
        {
            "Condition" : "CreatePeeredZone",
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "VpcPeeredZoneStack",
                    "Outputs.PrivateHostedZoneId"
                ]
            },
            "Description" : "ID of the Private Hosted Zone used for resolution of a domain in the peered VPC"
        }
    }
}
