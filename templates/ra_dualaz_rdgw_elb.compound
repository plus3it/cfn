{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "This template creates an HA remote access solution across two AZs using Remote Desktop Gateway, fronted by an Elastic Load Balancer.",
    "Parameters" :
    {
        "VPC" :
        {
            "Description" : "VPC ID",
            "Type" : "AWS::EC2::VPC::Id"
        },
        "ElbSslCertificateName" :
        {
            "Description" : "The name (for IAM) or identifier (for ACM) of the SSL certificate to associate with the ELB. The cert must already exist in the service.",
            "Type" : "String"
        },
        "ElbSslCertificateService" :
        {
            "Description" : "The service hosting the SSL certificate. Must be ACM or IAM.",
            "Type" : "String",
            "Default" : "ACM",
            "AllowedValues" :
            [
                "ACM",
                "IAM"
            ]
        },
        "ElbPublicSubnetIDs" :
        {
            "Description" : "A list of Public subnet IDs to attach to the load balancer.",
            "Type" : "List<AWS::EC2::Subnet::Id>"
        },
        "ForceUpdateToggle" :
        {
            "Description" : "A/B toggle that forces a change to a LaunchConfig property, triggering the AutoScale Update Policy",
            "Type" : "String",
            "Default" : "A",
            "AllowedValues" :
            [
                "A",
                "B"
            ]
        },
        "KeyPairName" :
        {
            "Description" : "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },
        "InstanceTypeRdgw" :
        {
            "Description" : "Amazon EC2 instance type for the Remote Desktop Gateway Instance",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" :
            [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "c4.large",
                "c4.xlarge",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "RemoteAccessUserGroup" :
        {
            "Description" : "Domain group of users authorized to use the RDGW",
            "Type" : "String",
            "Default" : "Domain Admins",
            "MinLength" : "1"
        },
        "DomainJoinPassword" :
        {
            "Description" : "Password for the domain join user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type" : "String",
            "MinLength" : "8",
            "MaxLength" : "32",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho" : "true",
            "Default" : "Password123"
        },
        "DomainJoinUser" :
        {
            "Description" : "User name for the account that will join the instance to the domain",
            "Type" : "String",
            "Default" : "StackAdmin",
            "MinLength" : "5",
            "MaxLength" : "25",
            "AllowedPattern" : "[a-zA-Z0-9_]*"
        },
        "DomainDNSName" :
        {
            "Description" : "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
            "Type" : "String",
            "Default" : "example.com",
            "MinLength" : "3",
            "MaxLength" : "25",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "DomainNetBIOSName" :
        {
            "Description" : "NetBIOS name of the domain (e.g. EXAMPLE)",
            "Type" : "String",
            "Default" : "EXAMPLE",
            "MinLength" : "1",
            "MaxLength" : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "RdgwAmiNameSearchString" :
        {
            "Description" : "Search pattern to match against an AMI Name",
            "Type" : "String",
            "Default" : "Windows_Server-2012-R2_RTM-English-64Bit-Base-*"
        },
        "Rdgw1PrivateSubnetID" :
        {
            "Description" : "Private Subnet ID where the first RDGW instance will run.",
            "Type" : "AWS::EC2::Subnet::Id"
        },
        "Rdgw2PrivateSubnetID" :
        {
            "Description" : "Private Subnet ID where the second RDGW instance will run.",
            "Type" : "AWS::EC2::Subnet::Id"
        }
    },
    "Resources" :
    {
        "RdgwSecurityGroupStack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/ra_rdgw_security_group.element",
                "Parameters" :
                {
                    "VPC" : { "Ref" : "VPC" },
                    "UseELB" : "true"
                }
            }
        },
        "RdgwElbStack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : "RdgwSecurityGroupStack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/ra_rdgw_elb_public_ssl_443.element",
                "Parameters" :
                {
                    "SslCertificateName" : { "Ref" : "ElbSslCertificateName" },
                    "SslCertificateService" :
                    {
                        "Ref" : "ElbSslCertificateService"
                    },
                    "PublicSubnetIDs" :
                    {
                        "Fn::Join" : [
                            ",",
                            { "Ref" : "ElbPublicSubnetIDs" }
                        ]
                    },
                    "SecurityGroupId" :
                    {
                        "Fn::GetAtt" :
                        [
                            "RdgwSecurityGroupStack",
                            "Outputs.RdgwElbSecurityGroupId"
                        ]
                    }
                }
            }
        },
        "Rdgw1Stack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : "RdgwElbStack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/ra_rdgw_private_autoscale_elb.element",
                "Parameters" :
                {
                    "ForceUpdateToggle" : {"Ref" : "ForceUpdateToggle"},
                    "KeyPairName" : {"Ref" : "KeyPairName"},
                    "AmiNameSearchString" : {"Ref" : "RdgwAmiNameSearchString"},
                    "RdgwInstanceType" : {"Ref" : "InstanceTypeRdgw"},
                    "RdgwElbName" :
                    {
                        "Fn::GetAtt" :
                        [
                            "RdgwElbStack",
                            "Outputs.LoadBalancerName"
                        ]
                    },
                    "RemoteAccessUserGroup" :
                    {
                        "Ref" : "RemoteAccessUserGroup"
                    },
                    "DomainJoinPassword" : { "Ref" : "DomainJoinPassword" },
                    "DomainJoinUser" : { "Ref" : "DomainJoinUser" },
                    "DomainDNSName" : { "Ref" : "DomainDNSName" },
                    "DomainNetBIOSName" : { "Ref" : "DomainNetBIOSName" },
                    "PrivateSubnetID" : { "Ref" : "Rdgw1PrivateSubnetID" },
                    "SecurityGroupIdRDGW" :
                    {
                        "Fn::GetAtt" :
                        [
                            "RdgwSecurityGroupStack",
                            "Outputs.RdgwSecurityGroupId"
                        ]
                    },
                    "VPC" : { "Ref" : "VPC" }
                }
            }
        },
        "Rdgw2Stack" :
        {
            "Type" : "AWS::CloudFormation::Stack",
            "DependsOn" : "Rdgw1Stack",
            "Properties" :
            {
                "TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/ra_rdgw_private_autoscale_elb.element",
                "Parameters" :
                {
                    "ForceUpdateToggle" : {"Ref" : "ForceUpdateToggle"},
                    "KeyPairName" : {"Ref" : "KeyPairName"},
                    "AmiNameSearchString" : {"Ref" : "RdgwAmiNameSearchString"},
                    "RdgwInstanceType" : {"Ref" : "InstanceTypeRdgw"},
                    "RdgwElbName" :
                    {
                        "Fn::GetAtt" :
                        [
                            "RdgwElbStack",
                            "Outputs.LoadBalancerName"
                        ]
                    },
                    "RemoteAccessUserGroup" :
                    {
                        "Ref" : "RemoteAccessUserGroup"
                    },
                    "DomainJoinPassword" : { "Ref" : "DomainJoinPassword" },
                    "DomainJoinUser" : { "Ref" : "DomainJoinUser" },
                    "DomainDNSName" : { "Ref" : "DomainDNSName" },
                    "DomainNetBIOSName" : { "Ref" : "DomainNetBIOSName" },
                    "PrivateSubnetID" : { "Ref" : "Rdgw2PrivateSubnetID" },
                    "SecurityGroupIdRDGW" :
                    {
                        "Fn::GetAtt" :
                        [
                            "RdgwSecurityGroupStack",
                            "Outputs.RdgwSecurityGroupId"
                        ]
                    },
                    "VPC" : { "Ref" : "VPC" }
                }
            }
        }
    },
    "Outputs" :
    {
        "RdgwLoadBalancerName" :
        {
            "Description": "Name of the RDGW Elastic Load Balancer",
            "Value" :
            {
                "Fn::GetAtt" : [ "RdgwElbStack", "Outputs.LoadBalancerName" ]
            }
        },
        "RdgwLoadBalancerDns" :
        {
            "Description": "DNS name for the RDGW ELB",
            "Value" :
            {
                "Fn::GetAtt" : [ "RdgwElbStack", "Outputs.LoadBalancerDns" ]
            }
        },
        "RdgwSecurityGroupId" :
        {
            "Description" : "Security Group ID for the RDGW instances",
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "RdgwSecurityGroupStack",
                    "Outputs.RdgwSecurityGroupId"
                ]
            }
        },
        "RdgwElbSecurityGroupId" :
        {
            "Description" : "Security Group ID for the RDGW Elastic Load Balancer",
            "Value" :
            {
                "Fn::GetAtt" :
                [
                    "RdgwSecurityGroupStack",
                    "Outputs.RdgwElbSecurityGroupId"
                ]
            }
        }
    }
}
