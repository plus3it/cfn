{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This element adds a Domain Controller to an existing forest. If deployed into a new AZ, it also creates the AD site and subnets.",
    "Mappings": {
        "AWSInstanceType2Arch": {
            "c4.large": {
                "Arch": "64"
            },
            "c4.xlarge": {
                "Arch": "64"
            },
            "m4.large": {
                "Arch": "64"
            },
            "m4.xlarge": {
                "Arch": "64"
            },
            "t2.medium": {
                "Arch": "64"
            },
            "t2.micro": {
                "Arch": "64"
            },
            "t2.small": {
                "Arch": "64"
            }
        },
        "AWSRegionArch2AMI": {
            "ap-northeast-1": {
                "64": "ami-c6b46dc6"
            },
            "ap-southeast-1": {
                "64": "ami-e0d1ebb2"
            },
            "ap-southeast-2": {
                "64": "ami-f9760dc3"
            },
            "eu-central-1": {
                "64": "ami-2e87be33"
            },
            "eu-west-1": {
                "64": "ami-c1740ab6"
            },
            "sa-east-1": {
                "64": "ami-b93bbba4"
            },
            "us-east-1": {
                "64": "ami-5b9e6b30"
            },
            "us-west-1": {
                "64": "ami-c5688281"
            },
            "us-west-2": {
                "64": "ami-67c7ff57"
            }
        }
    },
    "Metadata": {
        "Version": "0.5.1",
        "cfn-lint": {
            "config": {
                "ignore_checks": [
                    "W4002"
                ]
            }
        }
    },
    "Outputs": {
        "DomainControllerID": {
            "Description": "Instance ID of the Domain Controller",
            "Value": {
                "Ref": "DomainController"
            }
        }
    },
    "Parameters": {
        "ADDomainAdminPw": {
            "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type": "AWS::SSM::Parameter::Value<String>"
        },
        "ADDomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "ADRestoreModePw": {
            "Description": "Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols",
            "Type": "AWS::SSM::Parameter::Value<String>"
        },
        "CIDRPrivateSubnet": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "10.0.64.0/19",
            "Description": "CIDR Block for a Private Subnet (Example: 10.0.0.0/19, 10.0.64.0/19, 10.0.128.0/19, etc...)",
            "Type": "String"
        },
        "CIDRPublicSubnet": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "10.0.96.0/20",
            "Description": "CIDR Block for a Public DMZ Subnet (Example: 10.0.32.0/20, 10.0.96.0/20, 10.0.160.0/20, etc...)",
            "Type": "String"
        },
        "DcComputerName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "dc002",
            "Description": "NetBIOS computer name of the Domain Controller(Example: dc001, dc002, dc003, etc...)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "DcInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "c4.large",
                "c4.xlarge",
                "m4.large",
                "m4.xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the Domain Controller Instance",
            "Type": "String"
        },
        "DcPrivateIp": {
            "Default": "10.0.64.10",
            "Description": "Fixed private IP for the Domain Controller instance (e.g. 10.0.0.10, 10.0.64.10, 10.0.128.10, etc...)",
            "Type": "String"
        },
        "DcSecurityGroupId": {
            "Description": "ID of the security group for domain controllers",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnetId": {
            "Description": "Subnet ID for the Private Subnet where the AD Domain Controller instance will run",
            "Type": "AWS::EC2::Subnet::Id"
        }
    },
    "Resources": {
        "DcARecordSet": {
            "Properties": {
                "HostedZoneName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ADDomainDNSName"
                            },
                            "."
                        ]
                    ]
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "DcComputerName"
                            },
                            ".",
                            {
                                "Ref": "ADDomainDNSName"
                            },
                            "."
                        ]
                    ]
                },
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "DomainController",
                            "PrivateIp"
                        ]
                    }
                ],
                "TTL": 300,
                "Type": "A"
            },
            "Type": "AWS::Route53::RecordSet"
        },
        "DcElasticNetworkInterface": {
            "Properties": {
                "Description": "Network Interface for DC Instance",
                "GroupSet": [
                    {
                        "Ref": "DcSecurityGroupId"
                    }
                ],
                "PrivateIpAddress": {
                    "Ref": "DcPrivateIp"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnetId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "DomainController-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "DcSrvRecordSet": {
            "DependsOn": "DomainController",
            "Properties": {
                "HostedZoneName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ADDomainDNSName"
                            },
                            "."
                        ]
                    ]
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            "_ldap._tcp.dc._msdcs.",
                            {
                                "Ref": "ADDomainDNSName"
                            },
                            "."
                        ]
                    ]
                },
                "ResourceRecords": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "0 100 389 ",
                                {
                                    "Ref": "DcComputerName"
                                },
                                ".",
                                {
                                    "Ref": "ADDomainDNSName"
                                },
                                "."
                            ]
                        ]
                    }
                ],
                "SetIdentifier": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "DcComputerName"
                            },
                            ".",
                            {
                                "Ref": "AWS::StackName"
                            },
                            "."
                        ]
                    ]
                },
                "TTL": 300,
                "Type": "SRV",
                "Weight": 20
            },
            "Type": "AWS::Route53::RecordSet"
        },
        "DomainARecordSet": {
            "DependsOn": "DomainController",
            "Properties": {
                "HostedZoneName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ADDomainDNSName"
                            },
                            "."
                        ]
                    ]
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ADDomainDNSName"
                            },
                            "."
                        ]
                    ]
                },
                "ResourceRecords": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "DcPrivateIp"
                                }
                            ]
                        ]
                    }
                ],
                "SetIdentifier": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "DcComputerName"
                            },
                            ".",
                            {
                                "Ref": "AWS::StackName"
                            },
                            "."
                        ]
                    ]
                },
                "TTL": 300,
                "Type": "A",
                "Weight": 20
            },
            "Type": "AWS::Route53::RecordSet"
        },
        "DomainController": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT40M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "init",
                            "installADDS",
                            "configureDns",
                            "configureSites",
                            "finalize"
                        ],
                        "update": [
                            "setup",
                            "finalize"
                        ]
                    },
                    "configureDns": {
                        "commands": {
                            "10-set-dns-serveraddress": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress ",
                                            "-ServerAddresses 127.0.0.1\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "30-update-dns-registration": {
                                "command": "ipconfig /registerdns",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "configureSites": {
                        "commands": {
                            "15-add-new-site": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "\"",
                                            "New-ADReplicationSite -Name ",
                                            "(invoke-restmethod -uri http://169.254.169.254/latest/meta-data/placement/availability-zone)",
                                            "\""
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command if (-not ",
                                            "(Get-ADReplicationSite -filter {Name -eq ",
                                            "'",
                                            "$(invoke-restmethod -uri http://169.254.169.254/latest/meta-data/placement/availability-zone)",
                                            "'",
                                            "})) { continue } else { throw 'Site already exists in AD.' }"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "20-create-public-subnet": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command New-ADReplicationSubnet -Name ",
                                            {
                                                "Ref": "CIDRPublicSubnet"
                                            },
                                            " -Site ",
                                            "(invoke-restmethod -uri http://169.254.169.254/latest/meta-data/placement/availability-zone)"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command if (-not ",
                                            "(Get-ADReplicationSubnet -filter {Name -eq ",
                                            "'",
                                            {
                                                "Ref": "CIDRPublicSubnet"
                                            },
                                            "'",
                                            "})) { continue } else { throw 'Subnet already exists in AD.' }"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "30-create-private-subnet": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command New-ADReplicationSubnet -Name ",
                                            {
                                                "Ref": "CIDRPrivateSubnet"
                                            },
                                            " -Site ",
                                            "(invoke-restmethod -uri http://169.254.169.254/latest/meta-data/placement/availability-zone)"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command if (-not ",
                                            "(Get-ADReplicationSubnet -filter {Name -eq ",
                                            "'",
                                            {
                                                "Ref": "CIDRPrivateSubnet"
                                            },
                                            "'",
                                            "})) { continue } else { throw 'Subnet already exists in AD.' }"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "40-move-ad-server": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Move-ADDirectoryServer -Identity ",
                                            {
                                                "Ref": "DcComputerName"
                                            },
                                            " -Site ",
                                            "(invoke-restmethod -uri http://169.254.169.254/latest/meta-data/placement/availability-zone)"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "50-set-site-link": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "Get-ADReplicationSiteLink -Filter * | ",
                                            "Set-ADReplicationSiteLink -SitesIncluded ",
                                            "@{add=",
                                            "(invoke-restmethod -uri http://169.254.169.254/latest/meta-data/placement/availability-zone)",
                                            "} -ReplicationFrequencyInMinutes 15",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "10-signal-success": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0",
                                            " --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            " --resource DomainController",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "init": {
                        "commands": {
                            "10-set-static-ip": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command c:\\cfn\\scripts\\set-staticip.ps1",
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command if (-not ",
                                            "((Get-NetIPConfiguration).netipv4interface.dhcp -eq 'Disabled')) ",
                                            "{ continue } else { throw 'IP Address is already static.' }"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "45"
                            },
                            "30-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned -Command \"",
                                            "c:\\cfn\\scripts\\assert-joindomain.ps1 ",
                                            " -ComputerName ",
                                            "'",
                                            {
                                                "Ref": "DcComputerName"
                                            },
                                            "'",
                                            " -DomainAdminUsername ",
                                            "'Administrator'",
                                            " -DomainAdminPw ",
                                            "'",
                                            {
                                                "Ref": "ADDomainAdminPw"
                                            },
                                            "'",
                                            " -DomainDnsName ",
                                            "'",
                                            {
                                                "Ref": "ADDomainDNSName"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command if (-not (",
                                            "'",
                                            {
                                                "Ref": "DcComputerName"
                                            },
                                            "'",
                                            " -eq $env:computername)) ",
                                            "{ continue } else { throw 'Computer name is already configured.' }"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "installADDS": {
                        "commands": {
                            "05-install-prereqs": {
                                "command": "powershell.exe -Command \"Install-WindowsFeature rsat-adds -IncludeAllSubFeature\"",
                                "waitAfterCompletion": "0"
                            },
                            "20-install-adds": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned -Command \"",
                                            "c:\\cfn\\scripts\\assert-hadc.ps1 -DomainAdminUsername ",
                                            "'Administrator'",
                                            " -DomainAdminPw '",
                                            {
                                                "Ref": "ADDomainAdminPw"
                                            },
                                            "' -RestoreModePw '",
                                            {
                                                "Ref": "ADRestoreModePw"
                                            },
                                            "' -DomainDnsName '",
                                            {
                                                "Ref": "ADDomainDNSName"
                                            },
                                            "' -DcRole 'Replica DC' -Verbose\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "setup": {
                        "commands": {
                            "10-disable-win-fw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "20-set-execution-policy": {
                                "command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force",
                                "waitAfterCompletion": "0"
                            },
                            "30-unpack-ad-dsc-resource": {
                                "command": "powershell.exe -command c:\\cfn\\scripts\\unzip-archive.ps1 -Source c:\\cfn\\modules\\xactivedirectory-2.4.0.0.zip -Destination '%ProgramFiles%\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "40-unpack-nw-dsc-resource": {
                                "command": "powershell.exe -command c:\\cfn\\scripts\\unzip-archive.ps1 -Source c:\\cfn\\modules\\xnetworking-2.2.0.0.zip -Destination '%ProgramFiles%\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            },
                            "50-unpack-cm-dsc-resource": {
                                "command": "powershell.exe -command c:\\cfn\\scripts\\unzip-archive.ps1 -Source c:\\cfn\\modules\\xcomputermanagement-1.3.0.zip -Destination '%ProgramFiles%\\WindowsPowerShell\\Modules'",
                                "waitAfterCompletion": "0"
                            }
                        },
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.DomainController.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c update -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r DomainController",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\modules\\xactivedirectory-2.4.0.0.zip": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/xactivedirectory-2.4.0.0.zip"
                            },
                            "c:\\cfn\\modules\\xcomputermanagement-1.3.0.zip": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/xcomputermanagement-1.3.0.zip"
                            },
                            "c:\\cfn\\modules\\xnetworking-2.2.0.0.zip": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/xnetworking-2.2.0.0.zip"
                            },
                            "c:\\cfn\\scripts\\assert-computername.ps1": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/assert-computername.ps1"
                            },
                            "c:\\cfn\\scripts\\assert-hadc.ps1": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/assert-hadc.ps1"
                            },
                            "c:\\cfn\\scripts\\assert-joindomain.ps1": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/assert-joindomain.ps1"
                            },
                            "c:\\cfn\\scripts\\set-staticip.ps1": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "$netip = Get-NetIPConfiguration;",
                                            "Get-NetAdapter | Set-NetIPInterface -DHCP Disabled;",
                                            "Get-NetAdapter | New-NetIPAddress -AddressFamily IPv4 -IPAddress $netip.IPv4Address.IpAddress -PrefixLength $netip.IPv4Address.PrefixLength -DefaultGateway $netip.IPv4DefaultGateway.NextHop;",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses $netip.DNSServer.ServerAddresses;",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\unzip-archive.ps1": {
                                "source": "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/unzip-archive.ps1"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "DeleteOnTermination": true,
                            "VolumeSize": 100,
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "DcInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "DcInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "DcElasticNetworkInterface"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "DomainController-",
                                    {
                                        "Ref": "PrivateSubnetId"
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config",
                                " -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r DomainController",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        }
    }
}
