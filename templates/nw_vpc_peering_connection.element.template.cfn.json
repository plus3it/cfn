{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
        "RouteTable1": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RouteTableId1"
                        },
                        ""
                    ]
                }
            ]
        },
        "RouteTable2": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RouteTableId2"
                        },
                        ""
                    ]
                }
            ]
        },
        "RouteTable3": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RouteTableId3"
                        },
                        ""
                    ]
                }
            ]
        },
        "RouteTable4": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RouteTableId4"
                        },
                        ""
                    ]
                }
            ]
        }
    },
    "Description": "This element creates a VPC peering connection and adds the necessary route to specified route tables.",
    "Metadata": {
        "Version": "0.5.0"
    },
    "Outputs": {
        "VpcPeeringConnection": {
            "Description": "ID of the VPC peering connection",
            "Value": {
                "Ref": "VpcPeeringConnection"
            }
        }
    },
    "Parameters": {
        "RouteTableId1": {
            "AllowedPattern": "^$|^rtb-(?=(?:.{8}|.{17})$)[a-z0-9]*$",
            "Default": "",
            "Description": "ID of the first Route Table that needs a route to the peered VPC. Leave blank to skip this step.",
            "Type": "String"
        },
        "RouteTableId2": {
            "AllowedPattern": "^$|^rtb-(?=(?:.{8}|.{17})$)[a-z0-9]*$",
            "Default": "",
            "Description": "ID of the second Route Table that needs a route to the peered VPC. Leave blank to skip this step.",
            "Type": "String"
        },
        "RouteTableId3": {
            "AllowedPattern": "^$|^rtb-(?=(?:.{8}|.{17})$)[a-z0-9]*$",
            "Default": "",
            "Description": "ID of the third Route Table that needs a route to the peered VPC. Leave blank to skip this step.",
            "Type": "String"
        },
        "RouteTableId4": {
            "AllowedPattern": "^$|^rtb-(?=(?:.{8}|.{17})$)[a-z0-9]*$",
            "Default": "",
            "Description": "ID of the fourth Route Table that needs a route to the peered VPC. Leave blank to skip this step.",
            "Type": "String"
        },
        "VPC": {
            "Description": "VPC ID where the peering connection will be initiated.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VpcPeerAccountId": {
            "AllowedPattern": "^$|^[0-9]{12}$",
            "Default": "",
            "Description": "Account ID of the cross-account peer.",
            "Type": "String"
        },
        "VpcPeerCidr": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC Peer (Example: 10.1.0.0/16, etc...). Used to create a route to the VPC peer.",
            "Type": "String"
        },
        "VpcPeerId": {
            "AllowedPattern": "^$|^vpc-(?=(?:.{8}|.{17})$)[a-z0-9]*$",
            "Default": "",
            "Description": "VPC ID of the peer.",
            "Type": "String"
        },
        "VpcPeerRoleArn": {
            "AllowedPattern": "^$|^arn:aws:iam::[0-9]{12}:role\\/[a-zA-Z0-9\\-]+",
            "Default": "",
            "Description": "Role ARN of the cross-account role allowing another account to achieve peering.",
            "Type": "String"
        }
    },
    "Resources": {
        "VpcPeerRoute1": {
            "Condition": "RouteTable1",
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
                "DestinationCidrBlock": {
                    "Ref": "VpcPeerCidr"
                },
                "RouteTableId": {
                    "Ref": "RouteTableId1"
                },
                "VpcPeeringConnectionId": {
                    "Ref": "VpcPeeringConnection"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "VpcPeerRoute2": {
            "Condition": "RouteTable2",
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
                "DestinationCidrBlock": {
                    "Ref": "VpcPeerCidr"
                },
                "RouteTableId": {
                    "Ref": "RouteTableId2"
                },
                "VpcPeeringConnectionId": {
                    "Ref": "VpcPeeringConnection"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "VpcPeerRoute3": {
            "Condition": "RouteTable3",
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
                "DestinationCidrBlock": {
                    "Ref": "VpcPeerCidr"
                },
                "RouteTableId": {
                    "Ref": "RouteTableId3"
                },
                "VpcPeeringConnectionId": {
                    "Ref": "VpcPeeringConnection"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "VpcPeerRoute4": {
            "Condition": "RouteTable4",
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
                "DestinationCidrBlock": {
                    "Ref": "VpcPeerCidr"
                },
                "RouteTableId": {
                    "Ref": "RouteTableId4"
                },
                "VpcPeeringConnectionId": {
                    "Ref": "VpcPeeringConnection"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "VpcPeeringConnection": {
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
                "PeerOwnerId": {
                    "Ref": "VpcPeerAccountId"
                },
                "PeerRoleArn": {
                    "Ref": "VpcPeerRoleArn"
                },
                "PeerVpcId": {
                    "Ref": "VpcPeerId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCPeeringConnection"
        }
    }
}
