{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "This element creates a self-healing NAT instance with an Elastic Network Interface.",
    "Parameters" :
    {
        "CIDRVPC" :
        {
            "Description" : "CIDR Block for the VPC. This is used in the security group for the NAT instance, to allow inbound connections from instances in the VPC.",
            "Type" : "String",
            "Default" : "10.0.0.0/16",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "KeyPairName" :
        {
            "Description" : "Public/private key pairs allow you to securely connect to your instance after it launches.",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },
        "InstanceTypeNAT" :
        {
            "Description" : "Amazon EC2 instance type for the NAT Instance.",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" :
            [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "c4.large",
                "c4.xlarge",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "IpAddressNAT" :
        {
            "Description" : "Fixed IP in the public subnet for the ENI that will be attached to the NAT instance (Example: 10.0.47.254, 10.0.111.254, etc)",
            "Type" : "String",
            "Default" : "10.0.47.254"
        },
        "PublicSubnetId" :
        {
            "Description" : "Subnet ID for the Public Subnet where the NAT instance will run.",
            "Type" : "AWS::EC2::Subnet::Id"
        },
        "VPC" :
        {
            "Description" : "VPC ID",
            "Type" : "AWS::EC2::VPC::Id"
        }
    },
    "Mappings" :
    {
        "AWSInstanceType2Arch" :
        {
            "t2.micro" : { "Arch" : "64" },
            "t2.small" : { "Arch" : "64" },
            "t2.medium" : { "Arch" : "64" },
            "c4.large" : { "Arch" : "64" },
            "c4.xlarge" : { "Arch" : "64" },
            "m4.large" : { "Arch" : "64" },
            "m4.xlarge" : { "Arch" : "64" }
        },
        "AWSRegionArchNatAMI" :
        {
            "us-east-1" : { "64" : "ami-1ecae776" },
            "us-west-2" : { "64" : "ami-e7527ed7" },
            "us-west-1" : { "64" : "ami-d114f295" },
            "eu-west-1" : { "64" : "ami-a10897d6" },
            "eu-central-1" : { "64" : "ami-a8221fb5" },
            "ap-southeast-1" : { "64" : "ami-68d8e93a" },
            "ap-northeast-1" : { "64" : "ami-cbf90ecb" },
            "ap-southeast-2" : { "64" : "ami-fd9cecc7" },
            "sa-east-1" : { "64" : "ami-b52890a8" }
        }
    },
    "Resources" :
    {
        "IamNatInstanceProfile" :
        {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" :
            {
                "Path" : "/",
                "Roles" : [ { "Ref" : "IamNatRole" } ]
            }
        },
        "IamNatRole" :
        {
            "Type" : "AWS::IAM::Role",
            "Properties" :
            {
                "AssumeRolePolicyDocument" :
                {
                   "Version" : "2012-10-17",
                   "Statement" :
                   [{
                      "Effect" : "Allow",
                      "Principal" :
                      {
                         "Service" : [ "ec2.amazonaws.com" ]
                      },
                      "Action" : [ "sts:AssumeRole" ]
                   }]
                },
                "Path" : "/"
            }
        },
        "IamNatRolePolicy" :
        {
            "Type" : "AWS::IAM::Policy",
            "Properties" :
            {
                "PolicyName" : "IamNatRolePolicy",
                "PolicyDocument" :
                {
                    "Version" : "2012-10-17",
                    "Statement" :
                    [{
                        "Effect" : "Allow",
                        "Action" :
                        [
                            "ec2:AttachNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeInstances"
                        ],
                        "Resource" : "*"
                    }]
                },
                "Roles" : [ { "Ref" : "IamNatRole" } ]
            }
        },
        "PrivateRouteTable" :
        {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" :
            {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" :
                [
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Name",
                        "Value" :
                        { "Fn::Join" : ["", [
                            "Private-",
                            { "Ref" : "AWS::StackName" }
                        ]]}
                    }
                ]
            }
        },
        "PrivateRoute" :
        {
            "Type" : "AWS::EC2::Route",
            "Properties" :
            {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NetworkInterfaceId" : { "Ref" : "NATElasticNetworkInterface" }
            }
        },
        "NATElasticIP" :
        {
            "Type" : "AWS::EC2::EIP",
            "Properties" :
            {
                "Domain" : "vpc"
            }
        },
        "NATElasticIPAssociation" :
        {
            "Type" : "AWS::EC2::EIPAssociation",
            "Properties" :
            {
                "AllocationId" :
                {
                    "Fn::GetAtt" : [ "NATElasticIP", "AllocationId" ]
                },
                "NetworkInterfaceId" : { "Ref" : "NATElasticNetworkInterface" }
            }
        },
        "NATElasticNetworkInterface" :
        {
            "Type" : "AWS::EC2::NetworkInterface",
            "Properties" :
            {
                "Description" : "Network Interface for NAT Instance",
                "GroupSet" : [ { "Ref" : "NATSecurityGroup" } ],
                "PrivateIpAddress" : { "Ref" : "IpAddressNAT" },
                "SourceDestCheck" : "false",
                "SubnetId" : { "Ref" : "PublicSubnetId" },
                "Tags" :
                [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : ["", [
                            "NAT-",
                            { "Ref" : "PublicSubnetId" }
                        ]]}
                    }
                ]
            }
        },
        "NATAutoScalingGroup" :
        {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "CreationPolicy" :
            {
                "ResourceSignal" :
                {
                    "Count" : "1",
                    "Timeout" : "PT15M"
                }
            },
            "Properties" :
            {
                "VPCZoneIdentifier" : [ { "Ref" : "PublicSubnetId" } ],
                "LaunchConfigurationName" : { "Ref" : "NATLaunchConfig" },
                "MinSize" : "1",
                "MaxSize" : "1",
                "DesiredCapacity" : "1",
                "Tags" :
                [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : ["", [
                            "NAT-",
                            { "Ref" : "PublicSubnetId" }
                        ]]},
                        "PropagateAtLaunch" : "true"
                    }
                ]
            }
        },
        "NATLaunchConfig" :
        {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "DependsOn" : [ "NATElasticNetworkInterface" ],
            "Metadata" :
            {
                "Comment" : "Configure NAT Instance",
                "AWS::CloudFormation::Init" :
                {
                    "configSets" :
                    {
                        "config" :
                        [
                            "setup",
                            "configure-nat"
                        ]
                    },
                    "setup" :
                    {
                        "files" :
                        {
                            "/etc/cfn/cfn-hup.conf" :
                            {
                                "content" :
                                { "Fn::Join" : ["", [
                                    "[main]\n",
                                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                                    "region=", { "Ref" : "AWS::Region" }, "\n",
                                    "interval=1", "\n",
                                    "verbose=true", "\n"
                                ]]},
                                "mode" : "000400",
                                "owner" : "root",
                                "group" : "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf" :
                            {
                                "content" :
                                { "Fn::Join" : ["", [
                                    "[cfn-auto-reloader-hook]\n",
                                    "triggers=post.update\n",
                                    "path=Resources.NATLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                    "action=/opt/aws/bin/cfn-init -v -c config ",
                                    "         --stack ", { "Ref" : "AWS::StackName" },
                                    "         --resource NATLaunchConfig ",
                                    "         --region ", { "Ref" : "AWS::Region" }, "\n",
                                    "runas=root\n"
                                ]]},
                                "mode" : "000400",
                                "owner" : "root",
                                "group" : "root"
                            },
                            "/etc/cfn/scripts/configure-nat-eni.sh" :
                            {
                                "source" : "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/configure-nat-eni.sh",
                                "mode" : "000700",
                                "owner" : "root",
                                "group" : "root"
                            },
                            "/etc/cfn/scripts/configure-pat.sh" :
                            {
                                "source" : "https://raw.githubusercontent.com/plus3it/cfn/master/scripts/configure-pat.sh",
                                "mode" : "000700",
                                "owner" : "root",
                                "group" : "root"
                            }
                        },
                        "commands" :
                        {
                            "a-yum-update" :
                            {
                                "command" : "yum -y update"
                            }
                        },
                        "services" :
                        {
                            "sysvinit" :
                            {
                                "cfn-hup" :
                                {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files" :
                                    [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "configure-nat" :
                    {
                        "commands" :
                        {
                            "5-sleep-for-tags" :
                            {
                                "command" : "echo 'Sleeping 30 seconds to allow tags to propagate...' && sleep 30 && echo 'Proceeding...'"
                            },
                            "10-attach-eni" :
                            {
                                "command" : "/etc/cfn/scripts/configure-nat-eni.sh Name"
                            },
                            "20-configure-pat" :
                            {
                                "command" : "/etc/cfn/scripts/configure-pat.sh eth1"
                            },
                            "30-disable-eth0" :
                            {
                                "command" : "ec2ifdown eth0"
                            }
                        }
                    }
                }
            },
            "Properties" :
            {
                "IamInstanceProfile" : { "Ref" : "IamNatInstanceProfile" },
                "ImageId" :
                {
                    "Fn::FindInMap" :
                    [
                        "AWSRegionArchNatAMI",
                        { "Ref" : "AWS::Region" },
                        {
                            "Fn::FindInMap" :
                            [
                                "AWSInstanceType2Arch",
                                { "Ref" : "InstanceTypeNAT" },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType" : { "Ref" : "InstanceTypeNAT" },
                "AssociatePublicIpAddress" : "true",
                "SecurityGroups" : [ { "Ref" : "NATSecurityGroup" } ],
                "BlockDeviceMappings" :
                [
                  {
                    "DeviceName" : "/dev/xvda",
                    "Ebs" :
                    {
                        "VolumeType" : "gp2",
                        "DeleteOnTermination" : "true"
                    }
                  }
                ],
                "KeyName" : { "Ref" : "KeyPairName" },
                "UserData" :
                { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n\n",

                    "/opt/aws/bin/cfn-init -v -c config ",
                    "    --stack ", { "Ref" : "AWS::StackName" },
                    "    --resource NATLaunchConfig ",
                    "    --region ", { "Ref" : "AWS::Region" }, "\n\n",

                    "/opt/aws/bin/cfn-signal -e $? ",
                    "   --stack ", { "Ref" : "AWS::StackName" },
                    "   --resource NATAutoScalingGroup ",
                    "   --region ", { "Ref" : "AWS::Region"}, "\n"

                ]]}}
            }
        },
        "NATSecurityGroup" :
        {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" :
            {
                "GroupDescription" : "Enables outbound internet access for private subnets via the NAT instances",
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" :
                [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "1",
                        "ToPort" : "65535",
                        "CidrIp" : { "Ref" : "CIDRVPC" }
                    },
                    {
                        "IpProtocol" : "icmp",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp" : { "Ref" : "CIDRVPC" }
                    }
                ],
                "Tags" :
                [
                    {
                        "Key" : "Name",
                        "Value" :
                        { "Fn::Join" : ["", [
                            "NAT-",
                            { "Ref" : "PublicSubnetId" }
                        ]]}
                    }
                ]
            }
        }
    },
    "Outputs" :
    {
        "NATElasticNetworkInterfaceId" :
        {
            "Value" : { "Ref" : "NATElasticNetworkInterface" },
            "Description" : "ID of the NAT Elastic Network Interface"
        },
        "NATSecurityGroupId" :
        {
            "Value" : { "Ref" : "NATSecurityGroup" },
            "Description" : "ID of the NAT Security Group"
        },
        "PrivateRouteTableId" :
        {
            "Value" : { "Ref" : "PrivateRouteTable" },
            "Description" : "ID of the Private Route Table"
        }
    }
}
